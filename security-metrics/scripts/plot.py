import json
import os

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd


def plot_monthly_occurrences(df):
    monthly_occurrences_data = df.resample('M', convention='end').count()
    monthly_occurrences_data.drop(monthly_occurrences_data.columns.difference(['url']), 1, inplace=True)
    monthly_occurrences_data = monthly_occurrences_data.iloc[19:]
    monthly_occurrences_data.plot()
    plt.ylabel('Count')
    plt.xlabel('Date')
    plt.title('Amount of URLS aggregated to a monthly occurrence')
    plt.xticks()
    plt.legend().remove()
    plt.show()


def plot_hourly_occurrences(df):
    hourly_occurrences_data = df.groupby(df.index.hour).count()
    hourly_occurrences_data.drop(hourly_occurrences_data.columns.difference(['url']), 1, inplace=True)
    hourly_occurrences_data.plot()
    plt.ylabel('Count')
    plt.xlabel('Hour of the day')
    plt.xticks(np.arange(0, 25))
    plt.title('Amount of URLS aggregated to hour of the day')
    plt.legend().remove()
    plt.show()


def plot_domain_per_tld(df, tld_volumes):
    tld_data = df.groupby('tld')['domain'].nunique()
    tld_data.drop('unknown', inplace=True)
    tlds = []
    tld_count = []
    total_tld = []
    removed_tlds = []
    for tld, count in zip(list(map(lambda x: x.lower(), list(tld_data.index))), list(tld_data.values)):
        if tld in tld_volumes:
            tlds.append(tld)
            tld_count.append(count)
            total_tld.append(tld_volumes[tld])
        else:
            removed_tlds.append(tld)

    print('TLDs that were removed: ' + str(removed_tlds))
    percentage_tlds = []
    for count, total in zip(tld_count, total_tld):
        count = int(count)
        total = int(total)
        percentage_tlds.append((count / total) * 100)

    percentage_df = pd.DataFrame(percentage_tlds, columns=['percentage'], index=tlds)
    percentage_df.sort_values(by=['percentage'], ascending=False, inplace=True)
    percentage_df.head(20).plot.bar()

    plt.title('Percentage malicious domains per TLD')
    plt.xlabel('Top Level Domain (TLD)')
    plt.xticks(rotation='vertical')
    plt.ylabel('percentage')
    plt.legend().remove()
    plt.show()


def plot_country_occurrences(df, country_volume_df):
    country_data = df.groupby('country')['domain'].nunique()
    country_data.drop('unknown', inplace=True)
    country_data.index = country_data.index.map(str.lower)
    country_data.sort_values(ascending=False, inplace=True)
    removed_countries = []
    countries = []
    country_percentages = []
    for country in country_data.index:
        if country in country_volume_df.index:
            current = int(country_data.loc[country])
            volume = int(country_volume_df.loc[country])
            countries.append(country)
            country_percentages.append((current / volume) * 100)
        else:
            removed_countries.append(country)

    percentage_df = pd.DataFrame(country_percentages, columns=['percentage'], index=countries)
    percentage_df.sort_values(by=['percentage'], ascending=False, inplace=True)

    print("Countries that were removed: " + str(removed_countries))
    percentage_df.head(20).plot.bar()
    plt.title('Percentage of unique malware droppers domains per country')
    plt.xlabel('Country')
    plt.ylabel('Percentage')
    plt.legend().remove()
    plt.show()


if __name__ == '__main__':
    sorted_csv_file_name = "SortedMetrics.csv"
    sorted_csv_file = os.path.join("..", "processed_data", sorted_csv_file_name)
    data = pd.read_csv(sorted_csv_file)
    data['dateTime'] = pd.to_datetime(data['dateTime'], errors='coerce')
    data.dropna(how='any', axis=0, inplace=True)
    data.set_index(pd.DatetimeIndex(data['dateTime']), inplace=True)
    data.sort_index(inplace=True)

    tld_volumes_file_name = "tld_volumes.json"
    tld_volumes_file = os.path.join("..", "processed_data", tld_volumes_file_name)

    tld_volumes = json.load(open(tld_volumes_file))
    tld_metrics = {}
    for domain in tld_volumes:
        tld_metrics[domain['tld']] = domain['count']

    domain_volume_file_name = "domain_volume.csv"
    domain_volume_file = os.path.join("..", "processed_data", domain_volume_file_name)

    domain_volume = pd.read_csv(domain_volume_file, names=['country', 'count'])
    domain_volume['count'] = domain_volume['count'].apply(lambda a: int(a.replace(',', '')))
    domain_volume['country'] = domain_volume['country'].apply(lambda a: a.lower())
    domain_volume.replace('russian federation', 'russia', inplace=True)
    domain_volume.set_index(domain_volume['country'], inplace=True)
    domain_volume.drop(columns=['country'], inplace=True)

    plot_monthly_occurrences(data)
    plot_hourly_occurrences(data)
    plot_domain_per_tld(data, tld_metrics)
    plot_country_occurrences(data, domain_volume)
